#
# CORS header support
#
# As of Nginx 1.7.5, add_header supports an "always" parameter which
# allows CORS to work if the backend returns 4xx or 5xx status code.
#
# For more information on CORS, please see: http://enable-cors.org/
# From this Gist: https://gist.github.com/Stanback/7145487
# And this: https://gist.github.com/pauloricardomg/7084524
#

set $cors $http_origin;

# Allow-listed origins for CORS - enforces https for those
#if ($http_origin ~ '^https://eclipse-ditto\.github\.io(:\d+)?)$') {
#  set $cors $http_origin;
#}
# Allows http for localhost (on any port)
#if ($http_origin ~ '^http://(localhost|127\.0\.0\.1)(:\d+)?') {
#  set $cors $http_origin;
#}

if ($cors != "") {
  add_header 'Access-Control-Allow-Origin' '$cors' always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
  add_header 'Access-Control-Expose-Headers' 'correlation-id, response-required, dry-run, channel, etag, ditto-originator, requested-acks, timeout, location, ditto-metadata, traceparent, tracestate, entity-revision' always;
}

if ($request_method = 'OPTIONS') {
  # Tell client that this pre-flight info is valid for 20 days
  add_header 'Access-Control-Max-Age' 1728000;
  add_header 'Access-Control-Allow-Origin' '$cors' always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
  add_header 'Access-Control-Expose-Headers' 'correlation-id, response-required, dry-run, channel, etag, ditto-originator, requested-acks, timeout, location, ditto-metadata, traceparent, tracestate, entity-revision' always;
  add_header 'Content-Type' 'text/plain charset=UTF-8';
  add_header 'Content-Length' 0;
  return 204;
}
